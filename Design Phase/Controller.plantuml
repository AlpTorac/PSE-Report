@startuml
left to right direction

'Style Settings
skinparam {
    Linetype ortho
    BackgroundColor #bababa
    Shadowing false
    Nodesep 60
    Ranksep 50
    
}
skinparam Arrow {
    Color #2e2e2e
    Thickness 1.5
}
skinparam CircledCharacter {
    Radius 8
    FontSize 10
}
skinparam class {
    BackgroundColor #d1d1d1
    BorderColor #2e2e2e
    BorderThickness 1.5
    HeaderBackgroundColor #a6a6a6
}
skinparam package {
    BackgroundColor #bcbfd6
    BorderThickness 1.8
}
skinparam Note {
    BackgroundColor #297547
    BorderColor #171a17
    FontColor #e8e8e8
}

!startsub DIAGRAM
together {
    class EventManager{
        -Model model
        -MainWindow view
        +EventManager(Model model, MainWindow view)
        +initListeners()
    }

    

    class DataUpdateHandler implements IObserver{
        -Model model
        -MainWindow view
        -List<Element> elements
        +UpdateHandler(Model model, MainWindow view)
        +update()

    }

    class SettingsUpdateHandler implements IObserver{
        +SettingsUpdateHandler(Model model, MainWindow view)
        +update()

    }


    class FilterUpdateHandler implements IObserver{
        +FilterUpdateHandler(Model model, Panel panel)
        +update()
    }
    
    class InterpolationHandler implements IObserver{
        +InterpolationHandler(Model model, Panel panel)
        +update()
    }

        
    
}

package listeners{

        class LoadLibraryListener implements ActionListener{
            -Model model
            +LoadLibraryListener(Model model)
            +actionPerformed(ActionEvent e)
        }
        
        class OpenElementListener implements ActionListener{
            -Model model
            +OpenElementListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class DeleteCellListener implements ActionListener{
            -Model model
            +DeleteCellListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class RemoveCellListener implements ActionListener{
            -Model model
            +RemoveCellListener(Model model,)
            +actionPerformed(ActionEvent e)
        }

        class SelectListener implements ActionListener{
            -Model model
            -Panel panel
            +SelectCellListener(Model model, Panel panel)
            +actionPerformed(ActionEvent e)
        }

        class RenameListener implements ActionListener{
            -Model model
            +RenameListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class EditListener implements ActionListener, DocumentListener{
            -Model model
            +EditListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class SaveListener implements ActionListener{
            -Model model
            +SaveListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class SaveAsListener implements ActionListener{
            -Model model
            +SaveAsListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class MergeListener implements ActionListener{
            -Model model
            +MergeListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class ScaleListener implements ActionListener{
            -Model model
            +ScaleListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class InterpolationListener implements ActionListener{
            -Model model
            +InterpolationListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class UndoListener implements ActionListener{
            -Model model
            +UndoListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class RedoListener implements ActionListener{
            -Model model
            +RedoListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class StatisticsListener implements ItemListener{
            -Model model
            +StatisticsListener(Model model)
            +itemStateChanged(ItemEvent e)
        }

        class SearchListener implements TextListener{
            -Model model
            +SearchListener(Model model)
            +textValueChanged(TextEvent e)
        }

        class CompareListener implements ActionListener{
            -Model model
            +CompareListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class MoveListener implements ActionListener{
            -Model model
            +MoveListener(Model model)
            +actionPerformed(ActionEvent e)
        } 

        class CopyListener implements ActionListener{
            -Model model
            +CopyListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class PasteListener implements ActionListener{
            -Model model
            +PasteListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class AddFilterListener implements ActionListener{
            -Model model
            +AddFilterListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class AttributeDropdownListener implements ActionListener{
            -Model model
            +AttributeDropdownListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class SubAttributeDropdownListener implements ActionListener{
            -Model model
            +SubAttributeDropdownListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class GraphDropdownListener implements ActionListener{
            -Model model
            +GraphDropdownListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class PinSelectListener implements ActionListener{
            -Model model
            -Panel panel
            +PinSelectListener(Model model, Panel panel)
            +actionPerformed(ActionEvent e)
        }

        class ShortcutSettingsListener implements KeyListener{
            -Model model
            +ShortcutSettingsListener(Model model)
            +actionPerformed(ActionEvent e)
        }

        class PreferencesSettingsListener implements ActionListener{
            -Model model
            +PreferencesSettingsListener(Model model)
            +actionPerformed(ActionEvent e)

        }


}
!endsub
@enduml
